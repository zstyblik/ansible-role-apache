---
# Include variables and define needed variables.
- name: Include OS-specific variables.
  ansible.builtin.include_vars:
    file: "{{ ansible_os_family }}.yml"

- name: Define apache_packages.
  ansible.builtin.set_fact:
    apache_packages: "{{ __apache_packages | list }}"
  when: apache_packages is not defined

- name: Define apache user.
  ansible.builtin.set_fact:
    apache_httpd_user: "{{ __apache_httpd_user }}"
  when: apache_httpd_user == None

- name: Define apache group.
  ansible.builtin.set_fact:
    apache_httpd_group: "{{ __apache_httpd_group }}"
  when: apache_httpd_group == None

- name: Define apache logroot dir.
  ansible.builtin.set_fact:
    apache_httpd_logroot: "{{ __apache_httpd_logroot }}"
  when: apache_httpd_logroot == None

# NOTE(zstyblik): this is v2.4+ only, but we don't know version yet :|
- name: Define apache default runtime dir.
  ansible.builtin.set_fact:
    apache_httpd_default_runtime_dir: "{{ __apache_httpd_default_runtime_dir }}"
  when: apache_httpd_default_runtime_dir == None

# NOTE(zstyblik): I have distrust towards these facts. It may turn out to be
# problematic by not returning expected or desired value. However, variable can
# be set to custom value.
- name: Determine ServerName.
  ansible.builtin.set_fact:
    apache_httpd_servername: "{{ ansible_fqdn | default(ansible_hostname) }}"
  when: not apache_httpd_servername

# Setup/install tasks.
- name: Install httpd.
  ansible.builtin.include_tasks:
    file: "setup-{{ ansible_os_family }}.yml"

- name: Determine which version of Apache httpd is installed.
  ansible.builtin.command:
    argv:
      - "{{ apache_daemon_path }}{{ apache_daemon }}"
      - -v
  changed_when: false
  check_mode: false
  register: _apache_version

- name: Create apache_version variable.
  ansible.builtin.set_fact:
    apache_version: "{{ _apache_version.stdout.split()[2].split('/')[1] }}"

# Configure Apache.
- name: Configure Apache.
  ansible.builtin.include_tasks:
    file: "configure-{{ ansible_os_family }}.yml"

- name: Ensure Apache has selected state and enabled on boot.
  ansible.builtin.service:
    name: "{{ apache_service }}"
    state: "{{ apache_state }}"
    enabled: true
  become: true
